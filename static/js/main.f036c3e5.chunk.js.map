{"version":3,"sources":["components/Calculadora.js","components/SidebarData.js","components/subMenu.js","components/Sidebar.js","components/CapturadorDatos.js","components/GraficaLineal.js","components/GraficaTorta.js","components/GraficaHistograma.js","pages/GraficasPage.js","App.js","reportWebVitals.js","index.js"],"names":["Calculadora","useState","resultado","setResultado","handleClick","e","concat","target","name","clear","borrar","slice","calcular","eval","toString","err","className","type","value","id","onClick","SidebarData","title","path","icon","iconClosed","iconOpened","subNav","SidebarLink","styled","Link","SidebarLabel","span","DropdownLink","SubMenu","item","subnav","setSubnav","to","map","index","Nav","div","NavIcon","SidebarNav","nav","sidebar","SidebarWrap","Sidebar","setSidebar","showSidebar","Provider","color","CapturadorDatos","props","useForm","register","watch","errors","formState","handleSubmit","entradas","setEntradas","Container","fluid","Accordion","Card","Header","Toggle","as","Button","eventKey","Collapse","Body","Row","Col","xl","onSubmit","data","console","log","length","etiquetas","toUpperCase","valores","reset","required","message","minLength","placeholder","min","max","valueAsNumber","JSON","stringify","offset","style","marginTop","marginBottom","enviarPadre","GraficaLineal","border","Title","textAlign","Text","display","justifyContent","alignItems","ResponsiveContainer","width","height","AreaChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","stroke","fill","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","r","toFixed","GraficaTorta","activeIndex","setActiveIndex","onPieEnter","useCallback","_","PieChart","Pie","activeShape","onMouseEnter","GraficaHistograma","BarChart","Legend","verticalAlign","wrapperStyle","lineHeight","ReferenceLine","Brush","Bar","GraficaLinealPage","GraficaTortaPage","GraficaHistogramaPage","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f036c3e5.chunk.js","sourcesContent":["import React, {Fragment, useState} from 'react';\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport {Card, Button, Accordion} from 'react-bootstrap';\r\nimport '../App.css'\r\n\r\nconst Calculadora = () => {\r\n    const [resultado, setResultado] = useState(\"\");\r\n    const handleClick = (e) => {\r\n        setResultado(resultado.concat(e.target.name));\r\n    }\r\n    const clear = () => {\r\n        setResultado(\"\");\r\n    }\r\n    const borrar = () => {\r\n        setResultado(resultado.slice(0,-1));\r\n    }\r\n    const calcular = () => {\r\n        try{\r\n            setResultado(eval(resultado).toString());\r\n        }catch (err){\r\n            setResultado(\"Error\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div>\r\n                    <form className=\"pantalla\">\r\n                        <input type=\"text\" value={resultado}/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"teclado\">\r\n                    <button className=\"botonEspecial\" id=\"clear\" onClick={clear}>Clear</button>\r\n                    <button className=\"botonEspecial\" onClick={borrar}>C</button>\r\n                    <button className=\"botonEspecial\" name=\"/\" onClick={handleClick}>&divide;</button>\r\n                    <button name=\"7\" onClick={handleClick}>7</button>\r\n                    <button name=\"8\" onClick={handleClick}>8</button>\r\n                    <button name=\"9\" onClick={handleClick}>9</button>\r\n                    <button className=\"botonEspecial\" name=\"*\" onClick={handleClick}>&times;</button>\r\n                    <button name=\"4\" onClick={handleClick}>4</button>\r\n                    <button name=\"5\" onClick={handleClick}>5</button>\r\n                    <button name=\"6\" onClick={handleClick}>6</button>\r\n                    <button className=\"botonEspecial\" name=\"-\" onClick={handleClick}>&ndash;</button>\r\n                    <button name=\"1\" onClick={handleClick}>1</button>\r\n                    <button name=\"2\" onClick={handleClick}>2</button>\r\n                    <button name=\"3\" onClick={handleClick}>3</button>\r\n                    <button className=\"botonEspecial\" name=\"+\" onClick={handleClick}>+</button>\r\n                    <button name=\"0\" onClick={handleClick}>0</button>\r\n                    <button name=\".\" onClick={handleClick}>.</button>\r\n                    <button className=\"botonEspecial\" id=\"resultado\" onClick={calcular}>=</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Calculadora;","import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as RiIcons from 'react-icons/ri';\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title: 'Calculadora',\r\n        path: '/calculadora',\r\n        icon: <FaIcons.FaCalculator />\r\n    },\r\n    {\r\n        title: 'Graficas',\r\n        path: '/graficas',\r\n        icon: <FaIcons.FaReact />,\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n\r\n        subNav: [\r\n            {\r\n                title: 'Lineal',\r\n                path: '/graficas/graficalineal',\r\n                icon: <FaIcons.FaChartArea />\r\n            },\r\n            {\r\n                title: 'Torta',\r\n                path: '/graficas/graficatorta',\r\n                icon: <FaIcons.FaChartPie />\r\n            },\r\n            {\r\n                title: 'Histograma',\r\n                path: '/graficas/graficahistograma',\r\n                icon: <FaIcons.FaChartBar />\r\n            }\r\n        ]\r\n\r\n    }\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SidebarLink = styled(Link)`\r\n\tdisplay: flex;\r\n\tcolor: #ffffff;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 25px;\r\n\tlist-style: none;\r\n\theight: 70px;\r\n\ttext-decoration: none;\r\n\tfont-size: 1.5rem;\r\n\t&:hover {\r\n\t\tbackground: #7094db;\r\n\t\tborder-left: 4px solid #fff;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nconst SidebarLabel = styled.span`\r\n\tmargin-left: 20px;\r\n`;\r\n\r\nconst DropdownLink = styled(Link)`\r\n\tbackground: #33b2cc;\r\n\theight: 60px;\r\n\tpadding-left: 3rem;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\ttext-decoration: none;\r\n\tcolor: #f5f5f5;\r\n\tfont-size: 1.2rem;\r\n\t&:hover {\r\n\t\tbackground: #70c9db;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nconst SubMenu = ({ item }) => {\r\n    const [subnav, setSubnav] = useState(false);\r\n\r\n    const showSubnav = () => setSubnav(!subnav);\r\n\r\n    return (\r\n        <>\r\n            <SidebarLink to={item.path} onClick={item.subNav && showSubnav}>\r\n                <div>\r\n                    {item.icon}\r\n                    <SidebarLabel>{item.title}</SidebarLabel>\r\n                </div>\r\n                <div>\r\n                    {item.subNav && subnav\r\n                        ? item.iconOpened\r\n                        : item.subNav\r\n                            ? item.iconClosed\r\n                            : null}\r\n                </div>\r\n            </SidebarLink>\r\n            {subnav &&\r\n            item.subNav.map((item, index) => {\r\n                return (\r\n                    <DropdownLink to={item.path} key={index}>\r\n                        {item.icon}\r\n                        <SidebarLabel>{item.title}</SidebarLabel>\r\n                    </DropdownLink>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SubMenu;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { SidebarData } from './SidebarData';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport SubMenu from './subMenu';\r\n\r\nconst Nav = styled.div`\r\n  background: #3366CC;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2.5rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #212529;\r\n  width: 270px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\r\n  transition: 350ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n    const [sidebar, setSidebar] = useState(false);\r\n\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <Nav>\r\n                    <NavIcon to='#'>\r\n                        <FaIcons.FaBars onClick={showSidebar} />\r\n                    </NavIcon>\r\n                </Nav>\r\n                <SidebarNav sidebar={sidebar}>\r\n                    <SidebarWrap>\r\n                        <NavIcon to='#'>\r\n                            <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n                        </NavIcon>\r\n                        {SidebarData.map((item, index) => {\r\n                            return <SubMenu item={item} key={index} />;\r\n                        })}\r\n                    </SidebarWrap>\r\n                </SidebarNav>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React, {useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Container, Row, Col, Card, Button, Accordion} from \"react-bootstrap\";\r\nimport '../App.css'\r\n\r\nconst CapturadorDatos = (props) => {\r\n\r\n    const {\r\n        register,\r\n        watch,\r\n        formState: {errors},\r\n        handleSubmit,\r\n    } = useForm();\r\n\r\n    const [entradas, setEntradas] = useState([]);\r\n\r\n    const onSubmit = (data, e) => {\r\n        console.log(data);\r\n        setEntradas([\r\n            ...entradas,\r\n            {\r\n                id: entradas.length + 1,\r\n                etiquetas: data.etiquetas.toUpperCase(),\r\n                valores: data.valores\r\n            }\r\n        ])\r\n        e.target.reset();\r\n    }\r\n\r\n    const borrar = () => {\r\n        setEntradas(entradas.slice(0, -1));\r\n    }\r\n\r\n    const clear = () => {\r\n        setEntradas([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"graficos\">\r\n                <Container fluid=\"true\">\r\n                    <Accordion>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Accordion.Toggle as={Button} eventKey=\"0\">\r\n                                    Datos grafica\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col xl={{span: 6}}>\r\n                                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <label>Nombre de la etiqueta</label>\r\n                                                        <input type=\"hidden\" value={0} {...register(\"id\")} />\r\n                                                        <label>Campo del valor</label>\r\n                                                        <input type=\"text\" {...register(\"etiquetas\", {\r\n                                                            required: {value: true, message: \"Campo obligatorio\"},\r\n                                                            minLength: {value: 1, message: \"minimo un caracteres\"}\r\n                                                        })} placeholder=\"Nombre de la etiqueta\"\r\n                                                               className=\"form-control my-m2\"/>\r\n                                                        {errors.etiquetas && (<span\r\n                                                            className=\"text-danger text-small d-block mb-2\"> {errors.etiquetas.message} </span>)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <br/>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <input type=\"number\" {...register(\"valores\", {\r\n                                                            required: {value: true, message: \"Campo obligatorio\"},\r\n                                                            min: {value: 0, message: \"numero negativo\"},\r\n                                                            max: {value: 100, message: \"numero mayor a 100\"},\r\n                                                            valueAsNumber: true\r\n                                                        })}\r\n                                                               placeholder=\"Ingrese numero \"\r\n                                                               className=\"form-control my-m2\"/>\r\n                                                        {errors.valores && (<span\r\n                                                            className=\"text-danger text-small d-block mb-2\"> {errors.valores.message} </span>)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <br/>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <div className=\"d-grid gap-2\">\r\n                                                            <input className=\"btn btn-md btn-primary\" type=\"submit\"/>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                {<pre>{JSON.stringify(watch())}</pre>}\r\n                                            </form>\r\n                                        </Col>\r\n                                        <Col xl={{span: 6}}>\r\n                                            <Row>\r\n                                                <Col xl={{span: 6, offset: 3}}>\r\n                                                    <br/>\r\n                                                    <ul>\r\n                                                        {entradas.map(entradas => (\r\n                                                            <li key={entradas.id}>\r\n                                                                <div>{entradas.id} - {entradas.etiquetas} - {entradas.valores}</div>\r\n                                                            </li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <button className=\"btn btn-md btn-danger\" onClick={clear}>Clear</button>\r\n                                                <button className=\"btn btn-md btn-primary\" style={{ marginTop: \"5px\",marginBottom: \"5px\"}} onClick={borrar}>Borrar ultimo </button>\r\n                                                <button className=\"btn btn-md btn-success\"\r\n                                                        onClick={() => props.enviarPadre(entradas)}>Graficar\r\n                                                </button>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default CapturadorDatos;","import React, {useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Container, Row, Col, Card, Button, Accordion} from \"react-bootstrap\";\r\nimport {AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer} from \"recharts\";\r\nimport '../App.css'\r\nimport CapturadorDatos from \"./CapturadorDatos\"\r\n\r\nconst GraficaLineal = () => {\r\n\r\n    const [entradas, setEntradas] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid=\"true\">\r\n                <Card  style={{border: '10px solid rgba(255,255,255,.5)'}} >\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col xl={{span: 10, offset: 2}}>\r\n                                <Card.Title style={{textAlign: 'center'}}>Graficas area bajo la curva</Card.Title>\r\n                                <Card.Text style={{textAlign: 'center'}}>\r\n                                    Utilizando hooks como useState, useForm con librerias como React-bootstrap y Recharts\r\n                                </Card.Text>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"panelGraficas\">\r\n                            <Col xl={{span: 5, offset: 2}}>\r\n                                <CapturadorDatos enviarPadre={entradas => setEntradas(entradas)}/>\r\n                            </Col>\r\n                            <Col xl={{span: 5}} style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                marginTop: \"2em\"\r\n                            }}>\r\n                                <ResponsiveContainer width={'99%'} height={300}>\r\n                                    <AreaChart\r\n                                        width={700}\r\n                                        height={400}\r\n                                        data={entradas}\r\n                                        margin={{\r\n                                            top: 10,\r\n                                            right: 30,\r\n                                            left: 0,\r\n                                            bottom: 0,\r\n                                        }}\r\n                                    >\r\n                                        <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                                        <XAxis dataKey=\"etiquetas\"/>\r\n                                        <YAxis/>\r\n                                        <Tooltip/>\r\n                                        <Area type=\"monotone\" dataKey=\"valores\" stroke=\"#8884d8\" fill=\"#8884d8\"/>\r\n                                    </AreaChart>\r\n                                </ResponsiveContainer>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GraficaLineal;","import React, {useState, useCallback} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Container, Row, Col, Card, Button, Accordion} from \"react-bootstrap\";\r\nimport {PieChart, Pie, Sector, ResponsiveContainer} from \"recharts\";\r\nimport '../App.css'\r\nimport CapturadorDatos from \"./CapturadorDatos\"\r\n\r\nconst renderActiveShape = (props: any) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const {\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle,\r\n        fill,\r\n        payload,\r\n        percent,\r\n        value\r\n    } = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 10) * cos;\r\n    const sy = cy + (outerRadius + 10) * sin;\r\n    const mx = cx + (outerRadius + 30) * cos;\r\n    const my = cy + (outerRadius + 30) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 2;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n    return (\r\n        <g>\r\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n                {payload.etiquetas}\r\n            </text>\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                innerRadius={innerRadius}\r\n                outerRadius={outerRadius}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                fill={fill}\r\n            />\r\n            <Sector\r\n                cx={cx}\r\n                cy={cy}\r\n                startAngle={startAngle}\r\n                endAngle={endAngle}\r\n                innerRadius={outerRadius + 6}\r\n                outerRadius={outerRadius + 10}\r\n                fill={fill}\r\n            />\r\n            <path\r\n                d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n                stroke={fill}\r\n                fill=\"none\"\r\n            />\r\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\"/>\r\n            <text\r\n                x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n                y={ey}\r\n                textAnchor={textAnchor}\r\n                fill=\"#333\"\r\n            >{`VR ${value}`}</text>\r\n            <text\r\n                x={ex + (cos >= 0 ? 1 : -1) * 5}\r\n                y={ey}\r\n                dy={18}\r\n                textAnchor={textAnchor}\r\n                fill=\"#999\"\r\n            >\r\n                {`(${(percent * 100).toFixed(2)}%)`}\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nconst GraficaTorta = () => {\r\n\r\n    const [entradas, setEntradas] = useState([]);\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n    const onPieEnter = useCallback(\r\n        (_, index) => {\r\n            setActiveIndex(index);\r\n        },\r\n        [setActiveIndex]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Container fluid=\"true\">\r\n                <Card style={{border: '10px solid rgba(255,255,255,.5)'}}>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col xl={{span: 10, offset: 2}}>\r\n                                <Card.Title style={{textAlign: 'center'}}>Graficas de torta con etiquetas, valores y\r\n                                    porcentajes</Card.Title>\r\n                                <Card.Text style={{textAlign: 'center'}}>\r\n                                    Utilizando hooks como useState, useCallback, useForm con librerias como\r\n                                    React-bootstrap y Recharts\r\n                                </Card.Text>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"panelGraficas\">\r\n                            <Col xl={{span: 5, offset: 2}}>\r\n                                <CapturadorDatos enviarPadre={entradas => setEntradas(entradas)}/>\r\n                            </Col>\r\n                            <Col xl={{span: 5}} style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                marginTop: \"2em\"\r\n                            }}>\r\n                                <ResponsiveContainer width={'99%'} height={300}>\r\n                                    <PieChart width={200} height={200}>\r\n                                        <Pie\r\n                                            activeIndex={activeIndex}\r\n                                            activeShape={renderActiveShape}\r\n                                            data={entradas}\r\n                                            cx=\"50%\"\r\n                                            cy=\"50%\"\r\n                                            innerRadius={60}\r\n                                            outerRadius={80}\r\n                                            fill=\"#8884d8\"\r\n                                            dataKey=\"valores\"\r\n                                            onMouseEnter={onPieEnter}\r\n                                        />\r\n                                    </PieChart>\r\n                                </ResponsiveContainer>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GraficaTorta;","import React, {useState} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Container, Row, Col, Card, Button, Accordion} from \"react-bootstrap\";\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    Brush,\r\n    ReferenceLine,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n    ResponsiveContainer\r\n} from \"recharts\";\r\nimport '../App.css'\r\nimport CapturadorDatos from \"./CapturadorDatos\"\r\n\r\nconst GraficaHistograma = () => {\r\n\r\n    const [entradas, setEntradas] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <Container fluid=\"true\">\r\n                <Card style={{border: '10px solid rgba(255,255,255,.5)'}}>\r\n                    <Card.Body>\r\n                        <Row>\r\n                            <Col xl={{span: 10, offset: 2}}>\r\n                                <Card.Title style={{textAlign: 'center'}}>Graficas de histogramas con capacidad de hacer\r\n                                    zoom</Card.Title>\r\n                                <Card.Text style={{textAlign: 'center'}}>\r\n                                    Utilizando hooks como useState, useForm con librerias como React-bootstrap y\r\n                                    Recharts\r\n                                </Card.Text>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"panelGraficas\">\r\n                            <Col xl={{span: 5, offset: 2}}>\r\n                                <CapturadorDatos enviarPadre={entradas => setEntradas(entradas)}/>\r\n                            </Col>\r\n                            <Col xl={{span: 5}} style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                marginTop: \"2em\"\r\n                            }}>\r\n                                <ResponsiveContainer width={'99%'} height={300}>\r\n                                    <BarChart\r\n                                        width={500}\r\n                                        height={300}\r\n                                        data={entradas}\r\n                                        margin={{\r\n                                            top: 5,\r\n                                            right: 30,\r\n                                            left: 20,\r\n                                            bottom: 5\r\n                                        }}\r\n                                    >\r\n                                        <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                                        <XAxis dataKey=\"etiquetas\"/>\r\n                                        <YAxis/>\r\n                                        <Tooltip/>\r\n                                        <Legend verticalAlign=\"top\" wrapperStyle={{lineHeight: \"40px\"}}/>\r\n                                        <ReferenceLine y={0} stroke=\"#000\"/>\r\n                                        <Brush dataKey=\"valores\" height={30} stroke=\"#8884d8\"/>\r\n                                        <Bar dataKey=\"valores\" fill=\"#8884d8\"/>\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GraficaHistograma;","import React, {Fragment} from 'react';\r\nimport GraficaLineal from '../components/GraficaLineal';\r\nimport GraficaTorta from '../components/GraficaTorta';\r\nimport GraficaHistograma from '../components/GraficaHistograma';\r\n\r\nexport const GraficasPage = () => {\r\n    return (\r\n        <Fragment>\r\n            <GraficaLineal />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport const GraficaLinealPage = () => {\r\n    return (\r\n        <Fragment>\r\n            <GraficaLineal />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport const GraficaTortaPage = () => {\r\n    return (\r\n        <Fragment>\r\n            <GraficaTorta />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport const GraficaHistogramaPage = () => {\r\n    return (\r\n        <Fragment>\r\n            <GraficaHistograma />\r\n        </Fragment>\r\n    );\r\n};","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Calculadora from './components/Calculadora';\nimport Sidebar from './components/Sidebar';\nimport {  GraficasPage, GraficaLinealPage, GraficaTortaPage, GraficaHistogramaPage } from './pages/GraficasPage';\n\n\nfunction App() {\n    return (\n        <Router>\n            <Sidebar/>\n            <Switch>\n                <Route path=\"/calculadora\" exact component={Calculadora}/>\n                <Route path=\"/graficas\" exact component={GraficaLinealPage}/>\n                <Route path='/graficas/graficalineal' exact component={GraficaLinealPage} />\n                <Route path='/graficas/graficatorta' exact component={GraficaTortaPage} />\n                <Route path='/graficas/graficahistograma' exact component={GraficaHistogramaPage} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}